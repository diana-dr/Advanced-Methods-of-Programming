Program state:
ID: 1 
Execution Stack: [(v int; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; (print(v); ))))]
SymTable: {}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(v = 4; (while(v > 0) { (print(v); v = v - 1) }; (print(v); ))), v int]
SymTable: {}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(v = 4; (while(v > 0) { (print(v); v = v - 1) }; (print(v); ))), v int]
SymTable: {}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(v = 4; (while(v > 0) { (print(v); v = v - 1) }; (print(v); )))]
SymTable: {v->(0)}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(v = 4; (while(v > 0) { (print(v); v = v - 1) }; (print(v); )))]
SymTable: {v->(0)}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(while(v > 0) { (print(v); v = v - 1) }; (print(v); )), v = 4]
SymTable: {v->(0)}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(while(v > 0) { (print(v); v = v - 1) }; (print(v); )), v = 4]
SymTable: {v->(0)}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(while(v > 0) { (print(v); v = v - 1) }; (print(v); ))]
SymTable: {v->(4)}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(while(v > 0) { (print(v); v = v - 1) }; (print(v); ))]
SymTable: {v->(4)}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }]
SymTable: {v->(4)}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }]
SymTable: {v->(4)}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, (print(v); v = v - 1)]
SymTable: {v->(4)}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, (print(v); v = v - 1)]
SymTable: {v->(4)}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, v = v - 1, print(v)]
SymTable: {v->(4)}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, v = v - 1, print(v)]
SymTable: {v->(4)}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, v = v - 1]
SymTable: {v->(4)}
Output List: [4]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, v = v - 1]
SymTable: {v->(4)}
Output List: [4]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }]
SymTable: {v->(3)}
Output List: [4]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }]
SymTable: {v->(3)}
Output List: [4]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, (print(v); v = v - 1)]
SymTable: {v->(3)}
Output List: [4]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, (print(v); v = v - 1)]
SymTable: {v->(3)}
Output List: [4]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, v = v - 1, print(v)]
SymTable: {v->(3)}
Output List: [4]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, v = v - 1, print(v)]
SymTable: {v->(3)}
Output List: [4]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, v = v - 1]
SymTable: {v->(3)}
Output List: [4, 3]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, v = v - 1]
SymTable: {v->(3)}
Output List: [4, 3]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }]
SymTable: {v->(2)}
Output List: [4, 3]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }]
SymTable: {v->(2)}
Output List: [4, 3]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, (print(v); v = v - 1)]
SymTable: {v->(2)}
Output List: [4, 3]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, (print(v); v = v - 1)]
SymTable: {v->(2)}
Output List: [4, 3]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, v = v - 1, print(v)]
SymTable: {v->(2)}
Output List: [4, 3]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, v = v - 1, print(v)]
SymTable: {v->(2)}
Output List: [4, 3]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, v = v - 1]
SymTable: {v->(2)}
Output List: [4, 3, 2]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, v = v - 1]
SymTable: {v->(2)}
Output List: [4, 3, 2]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }]
SymTable: {v->(1)}
Output List: [4, 3, 2]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }]
SymTable: {v->(1)}
Output List: [4, 3, 2]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, (print(v); v = v - 1)]
SymTable: {v->(1)}
Output List: [4, 3, 2]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, (print(v); v = v - 1)]
SymTable: {v->(1)}
Output List: [4, 3, 2]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, v = v - 1, print(v)]
SymTable: {v->(1)}
Output List: [4, 3, 2]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, v = v - 1, print(v)]
SymTable: {v->(1)}
Output List: [4, 3, 2]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, v = v - 1]
SymTable: {v->(1)}
Output List: [4, 3, 2, 1]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }, v = v - 1]
SymTable: {v->(1)}
Output List: [4, 3, 2, 1]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }]
SymTable: {v->(0)}
Output List: [4, 3, 2, 1]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(print(v); ), while(v > 0) { (print(v); v = v - 1) }]
SymTable: {v->(0)}
Output List: [4, 3, 2, 1]
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: []
SymTable: {v->(0)}
Output List: [4, 3, 2, 1]
FileTable: []
Heap: {}

