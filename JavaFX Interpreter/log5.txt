Program state:
ID: 1 
Execution Stack: [(v int; (new(v, 20); (a int; (new(a, v); (print(rH(v)); (print(rH(rH(a)) + 5); ))))))]
SymTable: {}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(new(v, 20); (a int; (new(a, v); (print(rH(v)); (print(rH(rH(a)) + 5); ))))), v int]
SymTable: {}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(new(v, 20); (a int; (new(a, v); (print(rH(v)); (print(rH(rH(a)) + 5); ))))), v int]
SymTable: {}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(new(v, 20); (a int; (new(a, v); (print(rH(v)); (print(rH(rH(a)) + 5); )))))]
SymTable: {v->(int, 0)}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(new(v, 20); (a int; (new(a, v); (print(rH(v)); (print(rH(rH(a)) + 5); )))))]
SymTable: {v->(int, 0)}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(a int; (new(a, v); (print(rH(v)); (print(rH(rH(a)) + 5); )))), new(v, 20)]
SymTable: {v->(int, 0)}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(a int; (new(a, v); (print(rH(v)); (print(rH(rH(a)) + 5); )))), new(v, 20)]
SymTable: {v->(int, 0)}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(a int; (new(a, v); (print(rH(v)); (print(rH(rH(a)) + 5); ))))]
SymTable: {v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20}

Program state:
ID: 1 
Execution Stack: [(a int; (new(a, v); (print(rH(v)); (print(rH(rH(a)) + 5); ))))]
SymTable: {v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20}

Program state:
ID: 1 
Execution Stack: [(new(a, v); (print(rH(v)); (print(rH(rH(a)) + 5); ))), a int]
SymTable: {v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20}

Program state:
ID: 1 
Execution Stack: [(new(a, v); (print(rH(v)); (print(rH(rH(a)) + 5); ))), a int]
SymTable: {v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20}

Program state:
ID: 1 
Execution Stack: [(new(a, v); (print(rH(v)); (print(rH(rH(a)) + 5); )))]
SymTable: {a->(int, 0), v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20}

Program state:
ID: 1 
Execution Stack: [(new(a, v); (print(rH(v)); (print(rH(rH(a)) + 5); )))]
SymTable: {a->(int, 0), v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20}

Program state:
ID: 1 
Execution Stack: [(print(rH(v)); (print(rH(rH(a)) + 5); )), new(a, v)]
SymTable: {a->(int, 0), v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20}

Program state:
ID: 1 
Execution Stack: [(print(rH(v)); (print(rH(rH(a)) + 5); )), new(a, v)]
SymTable: {a->(int, 0), v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20}

Program state:
ID: 1 
Execution Stack: [(print(rH(v)); (print(rH(rH(a)) + 5); ))]
SymTable: {a->(int, 2), v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20, 2->int, 1}

Program state:
ID: 1 
Execution Stack: [(print(rH(v)); (print(rH(rH(a)) + 5); ))]
SymTable: {a->(int, 2), v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20, 2->int, 1}

Program state:
ID: 1 
Execution Stack: [(print(rH(rH(a)) + 5); ), print(rH(v))]
SymTable: {a->(int, 2), v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20, 2->int, 1}

Program state:
ID: 1 
Execution Stack: [(print(rH(rH(a)) + 5); ), print(rH(v))]
SymTable: {a->(int, 2), v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20, 2->int, 1}

Program state:
ID: 1 
Execution Stack: [(print(rH(rH(a)) + 5); )]
SymTable: {a->(int, 2), v->(int, 1)}
Output List: [20]
FileTable: []
Heap: {1->20, 2->int, 1}

Program state:
ID: 1 
Execution Stack: [(print(rH(rH(a)) + 5); )]
SymTable: {a->(int, 2), v->(int, 1)}
Output List: [20]
FileTable: []
Heap: {1->20, 2->int, 1}

Program state:
ID: 1 
Execution Stack: [, print(rH(rH(a)) + 5)]
SymTable: {a->(int, 2), v->(int, 1)}
Output List: [20]
FileTable: []
Heap: {1->20, 2->int, 1}

Program state:
ID: 1 
Execution Stack: [, print(rH(rH(a)) + 5)]
SymTable: {a->(int, 2), v->(int, 1)}
Output List: [20]
FileTable: []
Heap: {1->20, 2->int, 1}

Program state:
ID: 1 
Execution Stack: []
SymTable: {a->(int, 2), v->(int, 1)}
Output List: [20, 25]
FileTable: []
Heap: {1->20, 2->int, 1}

Program state:
ID: 1 
Execution Stack: []
SymTable: {a->(int, 2), v->(int, 1)}
Output List: [20, 25]
FileTable: []
Heap: {1->20, 2->int, 1}

Program state:
ID: 1 
Execution Stack: []
SymTable: {a->(int, 2), v->(int, 1)}
Output List: [20, 25]
FileTable: []
Heap: {1->20, 2->int, 1}

