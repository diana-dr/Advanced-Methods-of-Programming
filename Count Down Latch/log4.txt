Program state:
ID: 1 
Execution Stack: [(v int; (new(v, 20); (a int; (new(a, v); (new(v, 30); print(rH(rH(a))))))))]
SymTable: {}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(new(v, 20); (a int; (new(a, v); (new(v, 30); print(rH(rH(a))))))), v int]
SymTable: {}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(new(v, 20); (a int; (new(a, v); (new(v, 30); print(rH(rH(a))))))), v int]
SymTable: {}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(new(v, 20); (a int; (new(a, v); (new(v, 30); print(rH(rH(a)))))))]
SymTable: {v->(int, 0)}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(new(v, 20); (a int; (new(a, v); (new(v, 30); print(rH(rH(a)))))))]
SymTable: {v->(int, 0)}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(a int; (new(a, v); (new(v, 30); print(rH(rH(a)))))), new(v, 20)]
SymTable: {v->(int, 0)}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(a int; (new(a, v); (new(v, 30); print(rH(rH(a)))))), new(v, 20)]
SymTable: {v->(int, 0)}
Output List: []
FileTable: []
Heap: {}

Program state:
ID: 1 
Execution Stack: [(a int; (new(a, v); (new(v, 30); print(rH(rH(a))))))]
SymTable: {v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20}

Program state:
ID: 1 
Execution Stack: [(a int; (new(a, v); (new(v, 30); print(rH(rH(a))))))]
SymTable: {v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20}

Program state:
ID: 1 
Execution Stack: [(new(a, v); (new(v, 30); print(rH(rH(a))))), a int]
SymTable: {v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20}

Program state:
ID: 1 
Execution Stack: [(new(a, v); (new(v, 30); print(rH(rH(a))))), a int]
SymTable: {v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20}

Program state:
ID: 1 
Execution Stack: [(new(a, v); (new(v, 30); print(rH(rH(a)))))]
SymTable: {a->(int, 0), v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20}

Program state:
ID: 1 
Execution Stack: [(new(a, v); (new(v, 30); print(rH(rH(a)))))]
SymTable: {a->(int, 0), v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20}

Program state:
ID: 1 
Execution Stack: [(new(v, 30); print(rH(rH(a)))), new(a, v)]
SymTable: {a->(int, 0), v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20}

Program state:
ID: 1 
Execution Stack: [(new(v, 30); print(rH(rH(a)))), new(a, v)]
SymTable: {a->(int, 0), v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20}

Program state:
ID: 1 
Execution Stack: [(new(v, 30); print(rH(rH(a))))]
SymTable: {a->(int, 2), v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20, 2->int, 1}

Program state:
ID: 1 
Execution Stack: [(new(v, 30); print(rH(rH(a))))]
SymTable: {a->(int, 2), v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20, 2->int, 1}

Program state:
ID: 1 
Execution Stack: [print(rH(rH(a))), new(v, 30)]
SymTable: {a->(int, 2), v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20, 2->int, 1}

Program state:
ID: 1 
Execution Stack: [print(rH(rH(a))), new(v, 30)]
SymTable: {a->(int, 2), v->(int, 1)}
Output List: []
FileTable: []
Heap: {1->20, 2->int, 1}

Program state:
ID: 1 
Execution Stack: [print(rH(rH(a)))]
SymTable: {a->(int, 2), v->(int, 3)}
Output List: []
FileTable: []
Heap: {1->20, 2->int, 1, 3->30}

Program state:
ID: 1 
Execution Stack: [print(rH(rH(a)))]
SymTable: {a->(int, 2), v->(int, 3)}
Output List: []
FileTable: []
Heap: {1->20, 2->int, 1, 3->30}

Program state:
ID: 1 
Execution Stack: []
SymTable: {a->(int, 2), v->(int, 3)}
Output List: [20]
FileTable: []
Heap: {1->20, 2->int, 1, 3->30}

